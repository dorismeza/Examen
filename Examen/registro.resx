<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QpICwpSDkCSAsklJAkiws//Z
</value>
  </data>
</root>